M117 - Exercise 1

Konstantinos Giannousis M1400

Η γλώσσα που επελέγθηκε είναι η C++ λόγω της μικρότερης εμπειρίας (και λόγω του μεγάλου διαστήματος που έχει περάσει από την τελευταία ενασχόληση).

Bridge

Το παράδειγμα παρουσιάζει μια ομάδα κλάσεων (BMW & MercedesBenz) που κληρονομούν την κλάση όχημα (Vehicle). Οι κλάσεις αυτές
διαθέτουν ένα αντικείμενο τύπου Engine (abstract) το οποίο μπορεί να είναι τύπου είτε Petrol είτε Diesel ανάλογα με την υλοποίηση
που θέλουμε να κάνουμε. Με τον τρόπο αυτό αποφεύγεται η υλοποίηση πολλών διαφορετικών κλάσεων ανά μοντέλο οχήματος για κάθε τύπο
κλάσης μηχανής.

Observer

Το παράδειγμα παρουσιάζει μια υλοποίηση τύπου property change notifier με την οποία ένα αντικείμενο που κληρονομεί την
κλάση PropertyChangeNotifier μπορεί να ενημερώνει (ή να ενημερώνεται) για αλλαγές σε μια τιμή μεταβλητής/ων του αντικειμένου.
Έτσι στο συγκεκριμένο παράδειγμα, η κλάση PropertyChangeNotifier (μέσω της οποίας παρέχεται πρόσβαση στο Notifier), κληρονομείται
από μια κλάση αισθητήρας (HumiditySensor) η οποία στέλνει (PUSH) ενημερώσεις (notifications) για αλλαγές στη μεταβλητή humidity.
Η κλαση αυτή αποτελεί το Publisher. Δυο κλάσεις Subscribers (WaterController, ShadeController) κληρονομούν επίσης την κλάση
PropertyChangeNotifier. Αυτές οι κλάσεις "εγγράφονται" (subscribe) στην υπηρεσία του Notifier και λαμβάνουν ενημερώσεις για τις
τιμές της μεταβλητής humidity της κλάσης HumiditySensor έτσι ώστε να εκτελούν με τη σειρά τους εντολές ανάλογα με το ρόλο τους.

Visitor

Το παράδειγμα αυτό υλοποιεί το Visitor pattern στο παράδειγμα του πρώτου παραδείγματος του Bridge. Για λόγους διευκόλυνσης δεν έχουμε πολλαπλούς τύπους μηχανών αλλά ένα. Αυτό που διαφέρει εδώ είναι ότι οι μέθοδοι που υλοποιούν οι τύποι οχημάτων στο πρώτο παράδειγμα, έχουν πλέον μετατραπεί σε μέθοδο visit των αντίστοιχων κλάσεων τύπου VehicleVisitor. Με τη μέθοδο αυτή μπορεί να έχουμε διαφορετική υλοποίηση της κάθε μεθόδου ανα τύπο οχήματος αλλά ταυτόχρονα να συγκεντρώνεται η λειτουργία της εκάστοτε μεθόδου σε ένα αρχείο. Το μειονέκτημα της μεθόδου αυτής είναι ότι οι μέθοδοι visit που δέχονται τον τύπο οχήματος σαν όρισμα δεσμεύονται να επιδρουν στις δημόσιες μεθόδους και μεταβλητές των κλάσεων.

Στην υλοποίηση του συγκεκριμένου pattern δεν χρησιμοποιήθηκαν templates αλλά μόνο υπερφόρτωση/overloading μεθόδων.
Αν γινόταν υλοποίηση σε κάποια άλλη γλώσσα (Java ή C#) θα γινόταν χρήση των interfaces τα οποία θα παρείχαν τις
δηλώσεις των μεθόδων. Επιπλέον στο παράδειγμα του Observer, τόσο στη Java όσο και στη C# υπάρχουν αρκετοί τρόποι να
υλοποιηθούν actionListeners, actionPerforms (για τη Java) και events και delegates (για τη C#).

Build:
make

Run:
make run

Clean:
make clean
